{"version":3,"sources":["data.js","context.js","components/Header.js","components/AlertsGame.js","components/CharacterDropdown.js","components/Stopwatch.js","components/GameStart.js","components/Leaderboard.js","components/ModalGameOver.js","components/ModalGameStart.js","components/ModalComingSoon.js","components/Game.js","App.js","index.js"],"names":["levels","id","name","image","leaderboard","time","characters","xChar","Math","round","yChar","found","AppContext","React","createContext","AppProvider","children","useState","levelSelected","setLevelSelected","setCharacters","showDropdown","setShowDropdown","show","type","msgAlert","alert","setAlert","startTimer","setStartTimer","finalTime","setFinalTime","gameTimer","setGameTimer","waitStartGame","setWaitStartGame","gameStart","setGameStart","gameOver","setGameOver","comingSoon","setComingSoon","loading","setLoading","leaderboards","setLeaderboards","topTen","setTopTen","selectedCharacter","setSelectedCharacter","left","top","clickPosition","setClickPosition","dropdownContainer","useRef","width","undefined","height","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","map","level","handleAlert","msg","timer","setTimeout","closeDropdown","clearTimeout","handleGameStart","setInterval","prev","clearInterval","every","char","enterLeader","getTopTen","sort","a","b","slice","playerTime","topPlayers","openDropdown","dropdownPosition","side","refContainer","x","y","current","style","right","console","log","checkCharacterPosition","character","Provider","value","nextLevel","newLevel","handleCharacterSelection","newSelection","find","selectCharacter","handleImageClick","e","coordinates","xClickCoord","nativeEvent","offsetX","target","offsetWidth","yClickCoord","offsetY","offsetHeight","clickLocation","updateClickPosition","playAgain","restart","addLeaderboard","playerName","preventDefault","newEntry","currentLeaderboard","useGlobalContext","useContext","Header","className","src","alt","AlertsGame","CharacterDropdown","ref","onClick","onChange","Stopwatch","floor","GameStart","Leaderboard","player","index","parseInt","ModalGameOver","setPlayerName","onSubmit","placeholder","ModalGameStart","ModalComingSoon","Game","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da66a4d9.chunk.js","sourcesContent":["const levels = [\n  {\n    id: \"level1\",\n    name: \"Level 1\",\n    image: \"./images/level1.jpg\",\n    leaderboard: [\n      { name: \"Moki\", time: 29246 },\n      { name: \"Bobby\", time: 98006 },\n      { name: \"Park\", time: 107030 },\n    ],\n    characters: [\n      {\n        id: 0,\n        name: \"Waldo\",\n        image: \"./images/characters/waldo-avatar.png\",\n        xChar: Math.round((968 / 1200) * 100),\n        yChar: Math.round((40 / 675) * 100),\n        found: false,\n      },\n      {\n        id: 1,\n        name: \"Wenda\",\n        image: \"./images/characters/wenda-avatar.png\",\n        xChar: Math.round((1066 / 1200) * 100),\n        yChar: Math.round((192 / 675) * 100),\n        found: false,\n      },\n      {\n        id: 2,\n        name: \"Odlaw\",\n        image: \"./images/characters/odlaw-avatar.png\",\n        xChar: Math.round((59 / 1200) * 100),\n        yChar: Math.round((540 / 675) * 100),\n        found: false,\n      },\n    ],\n  },\n  {\n    id: \"level2\",\n    name: \"Level 2\",\n    image: \"./images/level2.png\",\n    leaderboard: [\n      { name: \"Tim\", time: 89246 },\n      { name: \"Tammy\", time: 98006 },\n      { name: \"Tomato\", time: 107030 },\n    ],\n    characters: [\n      {\n        id: 3,\n        name: \"Waldo\",\n        image: \"./images/characters/waldo-avatar.png\",\n        xChar: Math.round((560 / 1840) * 100),\n        yChar: Math.round((1081 / 1300) * 100),\n        found: false,\n      },\n      {\n        id: 4,\n        name: \"Wenda\",\n        image: \"./images/characters/wenda-avatar.png\",\n        xChar: Math.round((1446 / 1840) * 100),\n        yChar: Math.round((380 / 1300) * 100),\n        found: false,\n      },\n      {\n        id: 5,\n        name: \"Odlaw\",\n        image: \"./images/characters/odlaw-avatar.png\",\n        xChar: Math.round((1040 / 1840) * 100),\n        yChar: Math.round((938 / 1300) * 100),\n        found: false,\n      },\n    ],\n  },\n];\n\nexport default levels;\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport levels from \"./data\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  /* === States === */\n  const [levelSelected, setLevelSelected] = useState(1);\n  const [characters, setCharacters] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [alert, setAlert] = useState({ show: false, type: \"\", msgAlert: \"\" });\n  const [startTimer, setStartTimer] = useState(false);\n  const [finalTime, setFinalTime] = useState(0);\n  const [gameTimer, setGameTimer] = useState(0);\n  const [waitStartGame, setWaitStartGame] = useState(true);\n  const [gameStart, setGameStart] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [comingSoon, setComingSoon] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [leaderboards, setLeaderboards] = useState([]);\n  const [topTen, setTopTen] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [clickPosition, setClickPosition] = useState({\n    left: 0,\n    top: 0,\n  });\n  const dropdownContainer = useRef(null);\n  /* === Manage window === */\n  // eslint-disable-next-line\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  });\n\n  /* === Initialize stage === */\n  useEffect(() => {\n    if (gameStart) {\n      setCharacters(levels[levelSelected - 1].characters);\n    }\n    // eslint-disable-next-line\n  }, [gameStart]);\n  /* === Initialize Leaderboard === */\n  useEffect(() => {\n    setLoading(true);\n    setLeaderboards(\n      levels.map((level) => {\n        if (level) {\n          setLeaderboards([...leaderboards, level.leaderboard]);\n        }\n        return level.leaderboard;\n      })\n    );\n    setLoading(false);\n    // eslint-disable-next-line\n  }, []);\n\n  /* === Alert logics === */\n  const handleAlert = (show, type, msg) => {\n    setAlert({\n      show: show,\n      type: type,\n      msgAlert: msg,\n    });\n  };\n  useEffect(() => {\n    if (alert.show) {\n      const timer = setTimeout(() => {\n        closeDropdown();\n        setAlert({ ...alert, show: false });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [alert]);\n\n  /* === Game Start & End logics === */\n  // Start\n  const handleGameStart = () => {\n    setComingSoon(false);\n    setWaitStartGame(false);\n    setGameOver(false);\n    setTopTen(false);\n    setGameStart(true);\n    setStartTimer(true);\n  };\n  useEffect(() => {\n    if (startTimer) {\n      const timer = setInterval(() => {\n        setGameTimer((prev) => prev + 10);\n      }, 10);\n      return () => clearInterval(timer);\n    }\n  }, [startTimer]);\n  // Game Over\n  const checkIsGameOver = () => {\n    const isGameOver = characters.every((char) => char.found === true);\n    if (isGameOver) {\n      setGameStart(false);\n      setGameOver(true);\n      setFinalTime(gameTimer);\n      enterLeader(gameTimer);\n      setStartTimer(false);\n      setGameTimer(0);\n      handleAlert(true, \"success\", \"Good job, you found everyone!\");\n    }\n  };\n  useEffect(() => {\n    if (!waitStartGame) {\n      checkIsGameOver();\n    }\n    // eslint-disable-next-line\n  }, [characters]);\n  const nextLevel = () => {\n    const newLevel = levelSelected + 1;\n    if (newLevel > 2) {\n      setComingSoon(true);\n      setGameStart(false);\n      setWaitStartGame(false);\n      setGameOver(false);\n    } else {\n      setLevelSelected(newLevel);\n      handleGameStart();\n    }\n  };\n  const playAgain = () => {\n    const newLevel = levelSelected;\n    setLevelSelected(newLevel);\n    handleGameStart();\n  };\n  const restart = () => {\n    setLevelSelected(1);\n    setWaitStartGame(true);\n  };\n\n  /* === Leaderboard logics === */\n  const getTopTen = (level) => {\n    return leaderboards[level - 1]\n      ?.sort((a, b) => a.time - b.time)\n      .slice(0, 10);\n  };\n  const enterLeader = (playerTime) => {\n    const topPlayers = getTopTen(levelSelected);\n    /* Enter the leaderboard if there are less than 10 players \n    or current time is better than player 10 */\n    if (!topPlayers[9]) {\n      setTopTen(true);\n    }\n    if (topPlayers[9] && playerTime < topPlayers[9].time) {\n      setTopTen(true);\n    }\n  };\n  // Add player to leaderboard\n  const addLeaderboard = (e, playerName, playerTime) => {\n    e.preventDefault();\n    const newEntry = { name: playerName, time: playerTime };\n    const currentLeaderboard = leaderboards[levelSelected - 1];\n    setLeaderboards(\n      leaderboards.map((leaderboard) => {\n        if (leaderboard === currentLeaderboard) {\n          const leaderboardUpdate = [...leaderboard, newEntry];\n          return leaderboardUpdate;\n        }\n        return leaderboard;\n      })\n    );\n    setTopTen(false);\n  };\n\n  /* === Click & coordintates logics === */\n  const clickLocation = (e) => {\n    const xClickCoord =\n      (e.nativeEvent.offsetX / e.nativeEvent.target.offsetWidth) * 100;\n    const yClickCoord =\n      (e.nativeEvent.offsetY / e.nativeEvent.target.offsetHeight) * 100;\n    const clickCoord = { xClickCoord, yClickCoord };\n    return clickCoord;\n  };\n  const updateClickPosition = (coordinates) => {\n    const { xClickCoord, yClickCoord } = coordinates;\n    const updatePositions = { left: xClickCoord, top: yClickCoord };\n    setClickPosition(updatePositions);\n  };\n  const handleImageClick = (e) => {\n    const coordinates = clickLocation(e);\n    updateClickPosition(coordinates);\n    openDropdown();\n  };\n\n  /* === Dropdown logics (character selection on click) === */\n  const openDropdown = () => {\n    setShowDropdown(true);\n  };\n  const closeDropdown = () => {\n    setShowDropdown(false);\n  };\n  // update the dropdown position onclick\n  const dropdownPosition = (side, refContainer, x, y) => {\n    if (side === \"left\") {\n      refContainer.current.style.right = \"unset\";\n      refContainer.current.style.left = `${x}`;\n      refContainer.current.style.top = `${y}`;\n    }\n    if (side === \"right\") {\n      refContainer.current.style.left = \"unset\";\n      refContainer.current.style.right = `${x}`;\n      refContainer.current.style.top = `${y}`;\n    }\n  };\n  useEffect(() => {\n    //Change dropdown display position depending of click coordinates(X)\n    if (clickPosition.left < 50 && showDropdown) {\n      dropdownPosition(\n        \"left\",\n        dropdownContainer,\n        clickPosition.left + 2 + \"%\",\n        clickPosition.top - 5 + \"%\"\n      );\n    }\n    if (clickPosition.left > 50 && showDropdown) {\n      dropdownPosition(\n        \"right\",\n        dropdownContainer,\n        (100-clickPosition.left) + 2 + \"%\",\n        clickPosition.top - 5 + \"%\"\n      );\n      console.log(100 - clickPosition.left);\n    }\n    // eslint-disable-next-line\n  }, [clickPosition]);\n\n  /* === Character selection from Dropdown logics === */\n  const selectCharacter = (name) => {\n    const newSelection = characters.find(\n      (character) => character.name === name\n    );\n    setSelectedCharacter(newSelection);\n  };\n  const handleCharacterSelection = (character) => {\n    selectCharacter(character.value);\n  };\n  // check character position & if it is found\n  const checkCharacterPosition = () => {\n    const { xChar, yChar } = selectedCharacter;\n    const { left, top } = clickPosition;\n    const checkX = left - 5 < xChar && xChar < left + 5;\n    const checkY = top - 5 < yChar && yChar < top + 5;\n    const checkXY = checkX && checkY;\n    return checkXY;\n  };\n  const characterFound = () => {\n    if (checkCharacterPosition()) {\n      if (!selectedCharacter.found) {\n        handleAlert(true, \"success\", `You found ${selectedCharacter.name}!`);\n      } else {\n        handleAlert(true, \"success\", `Already found!`);\n      }\n      setCharacters(\n        characters.map((character) => {\n          if (character.id === selectedCharacter.id) {\n            return { ...character, found: true };\n          }\n          return character;\n        })\n      );\n    }\n    if (!checkCharacterPosition()) {\n      if (selectedCharacter.found) {\n        handleAlert(\n          true,\n          \"danger\",\n          `${selectedCharacter.name} was already found!`\n        );\n      } else {\n        handleAlert(true, \"danger\", `That's not ${selectedCharacter.name}!`);\n      }\n      setSelectedCharacter(null);\n    }\n  };\n  useEffect(() => {\n    if (selectedCharacter !== null) {\n      characterFound();\n    }\n    // eslint-disable-next-line\n  }, [selectedCharacter]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        characters,\n        alert,\n        showDropdown,\n        dropdownContainer,\n        waitStartGame,\n        gameOver,\n        gameTimer,\n        finalTime,\n        nextLevel,\n        levelSelected,\n        handleGameStart,\n        handleCharacterSelection,\n        handleImageClick,\n        leaderboards,\n        playAgain,\n        restart,\n        comingSoon,\n        loading,\n        topTen,\n        addLeaderboard,\n        getTopTen,\n        closeDropdown,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import { useGlobalContext } from \"../context\";\n\nconst Header = () => {\n  const { characters } = useGlobalContext();\n  return (\n    <header>\n      <div className=\"top-header\">\n        <h1>Waldo Project</h1>\n        <div className=\"remaining-characters__container\">\n          <h4 className=\"remaining-characters__title\">Remaining characters</h4>\n          <div className=\"remaining-characters__images\">\n            {characters.map((character) => {\n              const { id, name, image, found } = character;\n              return (\n                <img\n                  key={id}\n                  src={image}\n                  alt={name}\n                  className={`${found && \"remaining-characters-found\"}`}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport { useGlobalContext } from \"../context\";\n\nfunction AlertsGame() {\n    const {alert} = useGlobalContext()\n    return (\n      <div className={`alert alert-${alert.type}`}>\n        <p>{alert.msgAlert}</p>\n      </div>\n    );\n}\n\nexport default AlertsGame\n","import { useGlobalContext } from \"../context\";\n//Components\nimport AlertsGame from \"./AlertsGame\";\n//icons\nimport { GrFormClose } from \"react-icons/gr\";\n\nfunction CharacterDropdown({ handleCharacterSelection }) {\n  const { characters, dropdownContainer, alert, closeDropdown } =\n    useGlobalContext();\n\n  return (\n    <div className=\"characters-dropdown\" ref={dropdownContainer}>\n      {alert.show && <AlertsGame />}\n      <button type=\"button\" className=\"close-btn\" onClick={closeDropdown}>\n        <GrFormClose />\n      </button>\n      <h4>Select a character</h4>\n      <form className=\"characters-selection\">\n        {characters.map((character) => {\n          const { id, name, image } = character;\n          return (\n            <label key={id} className=\"character-label\">\n              <input\n                type=\"radio\"\n                name=\"character-label\"\n                value={name}\n                onChange={(e) => handleCharacterSelection(e)}\n              />\n              <img src={image} alt={name} />\n              <p>{name}</p>\n            </label>\n          );\n        })}\n      </form>\n    </div>\n  );\n}\n\nexport default CharacterDropdown;\n","const Stopwatch = ({ timer }) => {\n  return (\n    <>\n      {(\"0\" + Math.floor((timer / 60000) % 60)).slice(-2)}:\n      {(\"0\" + Math.floor((timer / 1000) % 60)).slice(-2)}:\n      {(\"0\" + ((timer / 10) % 100)).slice(-2)}\n    </>\n  );\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport { useGlobalContext } from \"../context\";\n// Icons\nimport { MdOutlineTimer } from \"react-icons/md\";\n// Components\nimport Header from \"./Header\";\nimport CharacterDropdown from \"./CharacterDropdown\";\nimport Stopwatch from \"./Stopwatch\";\n// Datas\nimport levels from \"../data\";\n\nconst GameStart = () => {\n  const {\n    showDropdown,\n    levelSelected,\n    handleCharacterSelection,\n    handleImageClick,\n    gameTimer,\n  } = useGlobalContext();\n\n  return (\n    <main>\n      <Header />\n      <section className=\"game__container\">\n        <div className=\"game__header\">\n          <h2>{levels[levelSelected - 1].name}</h2>\n          <div className=\"timer\">\n            <MdOutlineTimer />\n            <h3 className=\"timer\">\n\n            <Stopwatch timer={gameTimer} />\n            </h3>\n          </div>\n        </div>\n        <div className=\"game-image__container\">\n          <img\n            src={levels[levelSelected - 1].image}\n            alt={levels[levelSelected - 1].name}\n            onClick={(e) => handleImageClick(e)}\n          />\n          {showDropdown && (\n            <CharacterDropdown\n              handleCharacterSelection={(e) =>\n                handleCharacterSelection(e.target)\n              }\n            />\n          )}\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default GameStart;\n","import { useGlobalContext } from \"../context\";\n//Components\nimport Stopwatch from \"./Stopwatch\";\n//icons\nimport { MdOutlineTimer } from \"react-icons/md\";\nconst Leaderboard = ({ level }) => {\n  const { loading, getTopTen } = useGlobalContext();\n  const topPlayers = getTopTen(level);\n\n  if (loading) {\n    return (\n      <>\n        <h1>Loading...</h1>\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <h2>Level {level}</h2>\n      <ol>\n        {topPlayers\n          .map((player, index) => {\n            const { name, time } = player;\n            return (\n              <li key={index}>\n                <div className=\"center\">\n                  <span className=\"bold\">{name}~</span>\n                  <Stopwatch timer={parseInt(time)} />\n                  <MdOutlineTimer />\n                </div>\n              </li>\n            );\n          })\n          .slice(0, 10)}\n      </ol>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","import { useState } from \"react\";\nimport { useGlobalContext } from \"../context\";\n// icons\nimport { MdOutlineTimer } from \"react-icons/md\";\n//Components\nimport Stopwatch from \"./Stopwatch\";\nimport Leaderboard from \"./Leaderboard\";\n\nfunction ModalGameOver() {\n  const {\n    finalTime,\n    nextLevel,\n    levelSelected,\n    playAgain,\n    topTen,\n    addLeaderboard,\n  } = useGlobalContext();\n\n  const [playerName, setPlayerName] = useState(\"\");\n  return (\n    <main>\n      <div className=\"modal gameover-modal\">\n        <h2>Level {levelSelected} clear !</h2>\n        <div className=\"clear-time\">\n          <p>CLEARING TIME</p>\n          <h3>\n            <MdOutlineTimer /> <Stopwatch timer={parseInt(finalTime)} />\n          </h3>\n          {topTen && (\n            <>\n              <form\n                className=\"form-topten\"\n                onSubmit={(e) => addLeaderboard(e, playerName, finalTime)}\n              >\n                <h3 className=\"form-title\">You made it to the top 10!</h3>\n                <p>\n                  Would you like to enter your name to enter the leaderboard?\n                </p>\n                <input\n                  type=\"text\"\n                  value={playerName}\n                  onChange={(e) => setPlayerName(e.target.value)}\n                  className=\"input-leaderboard\"\n                  placeholder=\"Enter name\"\n                />\n                <button type=\"submit\" className=\"btn-leaderboard\">\n                  submit\n                </button>\n              </form>\n            </>\n          )}\n        </div>\n\n        <div className=\"button-container\">\n          <button type=\"button\" onClick={playAgain}>\n            Play Again\n          </button>\n          <button type=\"button\" className=\"btn-next\" onClick={nextLevel}>\n            Next Level\n          </button>\n        </div>\n        <h1 className=\"title-top\">Top 10 players</h1>\n\n        <div className=\"leaderboard\">\n          <Leaderboard level={levelSelected} />\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default ModalGameOver;\n","import { useGlobalContext } from \"../context\";\n// Components\nimport Leaderboard from \"./Leaderboard\";\n\nfunction ModalGameStart() {\n  const { handleGameStart } = useGlobalContext();\n  return (\n    <main>\n      <div className=\"modal\">\n        <h2>Welcome to the Waldo project</h2>\n        <h3>Instructions</h3>\n        <p>\n          Waldo, Wenda and Oddlaw are hiding again! Find them as quickly as\n          possible\n        </p>\n        <button onClick={handleGameStart}>Start Game</button>\n        <h1 className=\"title-top\">Top 10 players</h1>\n        <div className=\"leaderboards-container\">\n          <div className=\"leaderboard\">\n            <Leaderboard level={1} />\n          </div>\n          <div className=\"leaderboard\">\n            <Leaderboard level={2} />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default ModalGameStart;\n","import { useGlobalContext } from \"../context\";\n\nfunction ModalComingSoon() {\n  const { restart } = useGlobalContext();\n  return (\n    <main>\n      <div className=\"modal\">\n        <h2>Coming Soon!</h2>\n        <h3>We are currently working on the next levels!</h3>\n        <button type=\"button\" onClick={restart}>\n          Restart\n        </button>\n      </div>\n    </main>\n  );\n}\n\nexport default ModalComingSoon;\n","import { useGlobalContext } from \"../context\";\n\n// Components\nimport GameStart from \"./GameStart\";\nimport ModalGameOver from \"./ModalGameOver\";\nimport ModalGameStart from \"./ModalGameStart\";\nimport ModalComingSoon from \"./ModalComingSoon\";\n\nexport default function Game() {\n  const { waitStartGame, gameOver, handleGameStart, comingSoon } =\n    useGlobalContext();\n\n  if (waitStartGame) {\n    return <ModalGameStart handleGameStart={handleGameStart} />;\n  }\n  if (gameOver) {\n    return <ModalGameOver />;\n  }\n  if (comingSoon) {\n    return <ModalComingSoon />;\n  }\n\n  return <GameStart />;\n}\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n//import Navbar from './components/Navbar';\nimport Game from \"./components/Game\";\n//import Modal from './components/Modal';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/waldo-game\" element={<Game />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider} from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}